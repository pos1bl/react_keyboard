{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleDocumentKeyboard","event","setState","key","document","addEventListener","this","removeEventListener","className","React","PureComponent","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,EAaEC,uBAAyB,SAACC,GACxB,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,0BAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,0BAV/C,oBAiBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEIF,KAAKR,MAAMC,WAAX,mCACgCO,KAAKR,MAAMC,WAD3C,KAEI,kCAxBhB,GAAyBU,IAAMC,e,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAR,SAASS,eAAe,W","file":"static/js/main.e644153a.chunk.js","sourcesContent":["import React from 'react';\n\n// type State = {\n//   pressedKey: string;\n// };\n\nexport class App extends React.PureComponent {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount(): void {\n    document.addEventListener('keyup', this.handleDocumentKeyboard);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.handleDocumentKeyboard);\n  }\n\n  handleDocumentKeyboard = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            this.state.pressedKey\n              ? `The last pressed key is [${this.state.pressedKey}]`\n              : 'Nothing was pressed yet'\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}